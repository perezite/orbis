TODO:
- BinPacking so umschreiben, dass er soweit wie möglich packt und alle gepackten Rects zurückgibt. Keine  Exception.
- Texture Atlas implementieren
	- Methode TextureAtlas::Generate hinzufügen. Erstellt aktuell einen trivialen Atlas mit der selben Grösse wie in Unity aber nur einer einzigen Texture links unten
	- Texture-Klasse updaten, so dass immer der Atlas verwendet wird. Ausserdem Speicher der Original-Textur freigeben.
	- Triviales Atlas-Paging imlementieren: Jeder Atlas hat genau eine Page
	- Exception werfen wenn der Atlas eine Page hat und MAX_ATLAS_SIZE beim Packen überschritten wird
	- Nach dem Packen den Atlas auf die minimale POT-Grösse zuschneiden
	- RenderDevice so anpassen, dass die Texturen wieder korrekt gerendert werden
	- RenderDevice anpassen, so dass pro TextureAtlas nur ein einziger DrawCall ausgeführt wird
	- Atlas-Paging implementieren
		- Maximale mögliche Texture-Grösse ermitteln
		- Falls die maximale mögliche Texture-Grösse kleiner als MAX_ATLAS_SIZE ist: Atlas in mehrere Page unterteilen und die Texturen sukzessive in die mehrern Pages verpacken
	- Texture Atlassing in Level1 einbinden 
	- Debug-Optionen hinzufügen, so dass beim Performance-Logging die Anzahl DrawCalls mitgeloggt werden.
	- Performance Regressionstest durchführen
- Coroutinen implementieren
- Partikelsystem implementieren
- Erzeugung und Vernichtung von Shaders und Textures im VideoManager verwalten
- Orbis in Bibliothek versiegeln
