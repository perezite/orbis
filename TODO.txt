TODO:	
- Testing
	- Integrationstests implementieren für Windows
		- Aufsplitten in TestHelper und TestRunner
		- Jedes relevante Level durchtesten
- Interface an SFML angleichen 
	- Tutorials von SFML durchgehen
	- Source-Code von SFML analysieren
	- Feature-Branch erstellen
	- In den Docs die externen Schnittstellen im SFML-Style definieren in Form von Header-Files
	- Die tatsächlichen Header-Files und Source-Files refactoren
		-- ifdefs benutzen um zwischen alter und neuer Implementation hin- und her zu springen
- Evaluieren, ob weitere Refactorings nötig sind und ggf. hier ins TODO aufnehmen	
- Partikelsystem implementieren
	- Fürs erste fixe Werte implementieren, welche der CenterPropulsion des Balles aus Blear entsprechen:
		- ColorOverLifetime (vorerst nicht als Gradient, sondern als Tween implementieren mit y-Achse = Alphawert)
	- Regression & Performanceregression
- Die CenterPropulsion des Balls aus Blear nachbauen. Dabei die Werte nach Bedarf tweaken
- Orbis in Bibliothek versiegeln
- Neues Projekt erstellen für die Implementation von Blear Level 1
- Orbis-Library als Submodule einbinden
- Folgende Element des Level1 von Blear implementieren in dieser Reihenfolge
	- Frame
	- Kollisionabfrage	
	- Ball 
	- Propulsion des Balles (nur CenterPropulsion)
	- Paddle
	- Bricks
	- Hintergrund
	- Levellogik mit Anzeigen über Console
	- Reset mit R-Taste