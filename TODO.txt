TODO:
- Partikelsystem implementieren
	- Bezier-Curve Test-Code implementieren
		- Testlevel erstellen
		- Testcomponente BezierTester erstellen
			- Erst Bezierkurve mit 2 Kontrollpunkten und 2 Tangenten implementieren
			- Beliebige Anzahl an Kontrollpunkten hinzufügen
		-- https://www.youtube.com/watch?v=dXECQRlmIaE
		-- https://www.youtube.com/watch?v=2HvH9cmHbG4
	- Testlevel erstellen basierend auf https://www.youtube.com/watch?v=dXECQRlmIaE
	- Trivialen ParticleSystemRenderer erstellen
	- Component ParticleSystemRenderer erstellen
	- Trivialen Controller für grünes Partikelsystem implementieren		
	- Folgende Parameter des ParticleSystemRenderers implementieren und kontinuierlich nachziehen im grünen Controller
		- Lifetime
		- ParticleLifetime
		- InitialSpeed Range
		- InitialSize Range
		- InitialAlpha Range
		- Tint
		- IsBurst
		- EmissionRate
		- VelocityInheritance (in Prozent)
		- EmissionShape (Sphere, Cone)
			- Geometry-Klassen dafür erstellen in Base
		- InitialVelocityBundleShape
		- DampingThreshold
		- DampingRate
		- ColorOverLifetime (ColorGradient)
		- SizeOverLifetime (Spline)
		- InitialOmega
			-- Vorzeichen identische mit Vorzeichen von InitialAlpha
		- DeathParticleSubSystem
			- Wird erzeugt beim Tod jedes Partikels des Hauptsystems
	- Controller für rotes Partikelsystem implementieren
	- Controller für Hintergrund Partikelsystem implementieren	
- Erzeugung und Vernichtung von Shaders und Textures im VideoManager verwalten
- Orbis in Bibliothek versiegeln
- Neues Projekt erstellen für die Implementation von Blear Level 1
- Orbis-Library als Submodule einbinden
- Level1 von Blear implementieren