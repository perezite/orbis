TODO:
- Partikelsystem implementieren
	- Koordinatensystem-Grafik hinzufügen
	- Auswählbare Koordinaten auf die Intervalle ([0, 1], [0, 1]) beschränken
	- Dump-Funktion schreiben, welche die Koordinaten per Tastendruck ins Clipboard dumpt
	- Controller 'BezierTester' schreiben, welcher den Scale eines gelben Bricks per Bezier-Kurve animiert
	- Component ParticleSystemRenderer erstellen
	- Triviale Implementation der Componente vornehmen
	- Trivialen Controller für grünes Partikelsystem implementieren		
	- Folgende Parameter des ParticleSystemRenderers implementieren und kontinuierlich nachziehen im grünen Controller
		- Lifetime
		- ParticleLifetime
		- InitialSpeed Range
		- InitialSize Range
		- InitialAlpha Range
		- Tint
		- IsBurst
		- EmissionRate
		- VelocityInheritance (in Prozent)
		- EmissionShape (Sphere, Cone)
			- Geometry-Klassen dafür erstellen in Base
		- InitialVelocityBundleShape
		- DampingThreshold
		- DampingRate
		- ColorOverLifetime (ColorGradient)
		- SizeOverLifetime (Spline)
		- InitialOmega
			-- Vorzeichen identische mit Vorzeichen von InitialAlpha
		- DeathParticleSubSystem
			- Wird erzeugt beim Tod jedes Partikels des Hauptsystems
	- Controller für rotes Partikelsystem implementieren
	- Controller für Hintergrund Partikelsystem implementieren	
- Erzeugung und Vernichtung von Shaders und Textures im VideoManager verwalten
- Orbis in Bibliothek versiegeln
- Neues Projekt erstellen für die Implementation von Blear Level 1
- Orbis-Library als Submodule einbinden
- Level1 von Blear implementieren